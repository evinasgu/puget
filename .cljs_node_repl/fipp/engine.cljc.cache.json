["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fipp.engine","~:imports",null,"~:requires",["^ ","~$deque","~$fipp.deque","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$serialize-node",["^ ","^7","~$fipp.engine/serialize-node","~:file",".cljs_node_repl/fipp/engine.cljc","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",25,"~:meta",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",10,"^D",11,"^E",10,"^F",25],"~:tag","~$cljs.core/MultiFn"],"~$serialize",["^ ","~:protocol-inline",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",12,"^D",7,"^E",12,"^F",16,"~:arglists",["~#list",["~$quote",["^M",[["~$doc"]]]]]],"^7","~$fipp.engine/serialize","^B",".cljs_node_repl/fipp/engine.cljc","^F",16,"~:method-params",["^M",[["^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^D",1,"~:variadic?",false,"^C",12,"~:ret-tag",["^6",["~$cljs.core/IVector","~$any","~$clj-nil"]],"^E",12,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^N",["^M",[["^O"]]]]]],"~$annotate-rights",["^ ","^K",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",68,"^D",7,"^E",68,"^F",22,"^L",["^M",["^N",["^M",[["~$rf"]]]]],"~:doc","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"^7","~$fipp.engine/annotate-rights","^B",".cljs_node_repl/fipp/engine.cljc","^F",22,"^Q",["^M",[["^10"]]],"^R",null,"^S",["^M",[null,null]],"^D",1,"^T",false,"^C",68,"^U","~$function","^E",68,"^Y",1,"^Z",true,"^L",["^M",["^N",["^M",[["^10"]]]]],"^11","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"~$update-right",["^ ","^K",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",89,"^D",7,"^E",89,"^F",19,"^L",["^M",["^N",["^M",[["^;","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","^T",true,"~:fixed-arity",2,"^Y",2,"^Q",[["^M",["^;","~$f","^15"]]],"^L",["^M",[["^;","~$f","~$&","^15"]]],"^S",["^M",[null]]]],"^7","~$fipp.engine/update-right","^B",".cljs_node_repl/fipp/engine.cljc","^F",19,"^16",["^ ","^T",true,"^17",2,"^Y",2,"^Q",[["^M",["^;","~$f","^15"]]],"^L",["^M",[["^;","~$f","~$&","^15"]]],"^S",["^M",[null]]],"^Q",[["^M",["^;","~$f","^15"]]],"^R",null,"^17",2,"^S",["^M",[null]],"^D",1,"^T",true,"~:methods",[["^ ","^17",2,"^T",true,"^H","^W"]],"^C",89,"^U","^W","^E",89,"^Y",2,"^Z",true,"^L",["^M",[["^;","~$f","~$&","^15"]]]],"~$annotate-begins",["^ ","^K",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",92,"^D",7,"^E",92,"^F",22,"^L",["^M",["^N",["^M",[[["^ ","~:keys",["~$width"],"~:as","~$options"]]]]]],"^11","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"^7","~$fipp.engine/annotate-begins","^B",".cljs_node_repl/fipp/engine.cljc","^F",22,"^Q",["^M",[["~$p__1279"]]],"^R",null,"^S",["^M",[null,null]],"^D",1,"^T",false,"^C",92,"^U","^13","^E",92,"^Y",1,"^Z",true,"^L",["^M",["^N",["^M",[[["^ ","^1;",["^1<"],"^1=","^1>"]]]]]],"^11","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"~$format-nodes",["^ ","^K",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",164,"^D",7,"^E",164,"^F",19,"^L",["^M",["^N",["^M",[[["^ ","^1;",["^1<"],"^1=","^1>"]]]]]],"^11","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"^7","~$fipp.engine/format-nodes","^B",".cljs_node_repl/fipp/engine.cljc","^F",19,"^Q",["^M",[["~$p__1288"]]],"^R",null,"^S",["^M",[null,null]],"^D",1,"^T",false,"^C",164,"^U","^13","^E",164,"^Y",1,"^Z",true,"^L",["^M",["^N",["^M",[[["^ ","^1;",["^1<"],"^1=","^1>"]]]]]],"^11","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"~$print-fns",["^ ","^K",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",233,"^D",7,"^E",233,"^F",16,"^L",["^M",["^N",["^M",[["^1>"]]]]]],"^7","~$fipp.engine/print-fns","^B",".cljs_node_repl/fipp/engine.cljc","^F",16,"^Q",["^M",[["^1>"]]],"^R",null,"^S",["^M",[null,null]],"^D",1,"^T",false,"^C",233,"^U","~$cljs.core/IMap","^E",233,"^Y",1,"^Z",true,"^L",["^M",["^N",["^M",[["^1>"]]]]]],"~$pprint-document",["^ ","^K",null,"^G",["^ ","^B","/home/enyert/Projects/gaiwan/puget/.cljs_node_repl/fipp/engine.cljc","^C",247,"^D",7,"^E",247,"^F",22,"^L",["^M",["^N",["^M",[["~$document"],["^1H","^1>"]]]]],"^16",["^ ","^T",false,"^17",2,"^Y",2,"^Q",["^M",[["^1H"],["^1H","^1>"]]],"^L",["^M",[["^1H"],["^1H","^1>"]]],"^S",["^M",[null,null]]]],"^7","~$fipp.engine/pprint-document","^B",".cljs_node_repl/fipp/engine.cljc","^F",22,"^16",["^ ","^T",false,"^17",2,"^Y",2,"^Q",["^M",[["^1H"],["^1H","^1>"]]],"^L",["^M",[["^1H"],["^1H","^1>"]]],"^S",["^M",[null,null]]],"^Q",["^M",[["^1H"],["^1H","^1>"]]],"^R",null,"^17",2,"^S",["^M",[null,null]],"^D",1,"^T",false,"^19",[["^ ","^17",1,"^T",false,"^H","^W"],["^ ","^17",2,"^T",false,"^H","^W"]],"^C",247,"^E",247,"^Y",2,"^Z",true,"^L",["^M",[["^1H"],["^1H","^1>"]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:nest","~:align","~:outdent","~:group","~:else","~:offset","~:default","~:terminate","~:too-far","~:println","~:width","~:op","~:node","~:print","~:begin","~:break","~:nodes","^C","~:print-fn","~:right","~:escaped","~:position","~:pass","~:end","~:hierarchy","~:inline","~:text","~:span"]],"~:order",["^29","^1T","^1Y","^2;","^1R","^1Z","^27","^25","^2<","^C","^2:","^1U","^21","^1Q","^20","^28","^1N","^1S","^1P","^1O","^24","^1X","^26","^22","^1V","^23","^1[","^1W"]],"^11","See: Oleg Kiselyov, Simon Peyton-Jones, and Amr Sabry\n  Lazy v. Yield: Incremental, Linear Pretty-printing"]